{"version":3,"sources":["webpack:///./src/components/Certification.tsx","webpack:///./src/components/CertificationList.tsx","webpack:///./src/components/Education.tsx","webpack:///./src/components/EducationList.tsx","webpack:///./src/components/SocialMedia.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/Language.tsx","webpack:///./src/components/LanguageList.tsx","webpack:///./src/components/OtherSkillList.tsx","webpack:///./src/translations/messages.ts","webpack:///./src/translations/provider.ts","webpack:///./src/components/AchievementList.tsx","webpack:///./src/components/TechnologyList.tsx","webpack:///./src/components/Project.tsx","webpack:///./src/components/ResumeSkill.tsx","webpack:///./src/components/ResumeSkillList.tsx","webpack:///./src/components/TabSelector.tsx","webpack:///./src/templates/CV.tsx","webpack:///./src/assets/images/backgrounds/paper.png","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/images/profil.png","webpack:///./src/assets/images/backgrounds/lines.png"],"names":["Certification","props","react","className","data-fa-transform","title","description","CertificationList","certifications","map","certification","index","Certification_Certification","Object","assign","key","Education","titel","uni","from","to","EducationList","educations","education","Education_Education","iconsStyle","backgroundColor","color","borderRadius","padding","SocialMedia","href","linkedin","target","rel","style","github","xing","website","Paper","require","Header","gatsby_image_default","a","fluid","profile","backgroundImage","name","role","email","phone","SocialMedia_SocialMedia","socialMedia","Language","language","skill","LanguageList","languages","Language_Language","OtherSkillList","skills","messages","de","CAREER_SUMMARY","CERTIFICATIONS","WORK_XP","WATERSPORT","HOMEAUTOMATION","SKILLS","EDUCATION","LANGUAGES","INTEREST","GERMAN","ENGLISH","NATIVE","FLUENT","OPENSOURCE","SOURCEONGITHUB","ACHIEVEMENTS","TECHNOLOGY_USED","OTHERS","MORE_PROJECTS","en","loca","getTranslatedLabel","AchievementList","marginLeft","achievements","task","TechnologyList","technologies","tech","fontWeight","Project","company","url","float","location","AchievementList_AchievementList","TechnologyList_TechnologyList","ResumeSkill","width","xpInPercentage","ResumeSkillList","ResumeSkill_ResumeSkill","TabSelector","items","item","onClick","type","checked","onChange","icon","htmlToReactParser","HtmlToReactParser","Parser","Lines","scrollTo","saveScrollPosition","document","documentElement","scrollTop","query","__webpack_exports__","lang","pageContext","locale","isWorkSelected","pathname","includes","_React$useState","React","selectedItem","setSelectedItem","_React$useState2","path","setTimeout","window","Header_Header","data","childImageSharp","social","nodes","childSocialJson","overflow","navigate","cursor","parse","summary","html","TabSelector_TabSelector","projects","childProjectsJson","project","Project_Project","opensource","childOpensourceJson","marginTop","ResumeSkillList_ResumeSkillList","childSkillsJson","frontend","backend","OtherSkillList_OtherSkillList","others","EducationList_EducationList","childEducationsJson","CertificationList_CertificationList","certs","childCertsJson","LanguageList_LanguageList","textAlign","module","exports","__webpack_require__","p","m","default","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","d","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","pageResources","createElement","InternalPageRenderer","json","propTypes","shape"],"mappings":"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","file":"component---src-templates-cv-tsx-77ed50de209121936f02.js","sourcesContent":["import * as React from 'react';\n\nexport interface Props {\n  title: string;\n  description: string;\n}\n\nexport const Certification = (props: Props) => (\n  <li className=\"mb-2 pl-4 position-relative\">\n    <i className=\"resume-award-icon fas fa-trophy position-absolute\" data-fa-transform=\"shrink-2\" />\n    <div className=\"resume-award-name\">{props.title}</div>\n    <div className=\"resume-award-desc\">{props.description}</div>\n  </li>\n);\n","import * as React from 'react';\nimport { Certification, Props as CertificationProps } from './Certification';\n\ninterface Props {\n  certifications: CertificationProps[];\n}\n\nexport const CertificationList = (props: Props) => (\n  <ul className=\"list-unstyled resume-awards-list\">\n    {props.certifications.map((certification: CertificationProps, index: number) => (\n      <Certification key={index} {...certification} />\n    ))}\n  </ul>\n);\n","import * as React from 'react';\n\nexport interface Props {\n  titel: string;\n  uni: string;\n  from: string;\n  to: string;\n}\n\nexport const Education = (props: Props) => (\n  <li className=\"mb-2\">\n    <div className=\"resume-degree font-weight-bold\">{props.titel}</div>\n    <div className=\"resume-degree-org\">{props.uni}</div>\n    <div className=\"resume-degree-time\">\n      {props.from} - {props.to}\n    </div>\n  </li>\n);\n","import * as React from 'react';\nimport { Education, Props as EudcationProps } from './Education';\n\ninterface Props {\n  educations: EudcationProps[];\n}\n\nexport const EducationList = (props: Props) => (\n  <ul className=\"list-unstyled\">\n    {props.educations.map((education: EudcationProps, index: number) => (\n      <Education key={index} {...education} />\n    ))}\n  </ul>\n);\n","import * as React from 'react';\n\nexport interface Props {\n  linkedin: string;\n  github: string;\n  xing: string;\n  website: string;\n}\n\nconst iconsStyle = {\n  backgroundColor: 'white',\n  color: 'black',\n  borderRadius: '0.125rem',\n  padding: '2px'\n};\n\nexport const SocialMedia = (props: Props) => (\n  <div className=\"secondary-info ml-md-auto mt-2\">\n    <ul className=\"resume-social list-unstyled\">\n      <li className=\"mb-3\">\n        <a href={`http://${props.linkedin}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"link-unstyled\">\n          <span className=\"fa-container text-center mr-2\">\n            <i className=\"fab fa-linkedin-in fa-fw\" style={iconsStyle} />\n          </span>\n          {props.linkedin}\n        </a>\n      </li>\n      <li className=\"mb-3\">\n        <a href={`http://${props.github}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"link-unstyled\">\n          <span className=\"fa-container text-center mr-2\">\n            <i className=\"fab fa-github fa-fw\" style={iconsStyle} />\n          </span>\n          {props.github}\n        </a>\n      </li>\n      <li className=\"mb-3\">\n        <a href={`http://${props.xing}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"link-unstyled\">\n          <span className=\"fa-container text-center mr-2\">\n            <i className=\"fab fa-xing fa-fw\" style={iconsStyle} />\n          </span>\n          {props.xing}\n        </a>\n      </li>\n      <li>\n        <a href={`http://${props.website}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"link-unstyled\">\n          <span className=\"fa-container text-center mr-2\">\n            <i className=\"fas fa-globe\" style={iconsStyle} />\n          </span>\n          {props.website}\n        </a>\n      </li>\n    </ul>\n  </div>\n);\n","import Img from 'gatsby-image';\nimport * as React from 'react';\nimport { Props as socialMediaProps, SocialMedia } from './SocialMedia';\nconst profil = require('../../src/assets/images/profil.png');\nconst Paper = require('../../src/assets/images/backgrounds/paper.png');\n\ninterface Props {\n  name: string;\n  role: string;\n  email: string;\n  phone: string;\n  socialMedia: socialMediaProps;\n  profile: any;\n}\n\nexport const Header = (props: Props) => (\n  <header className=\"resume-header pt-4 pt-lg-0\">\n    <div className=\"media flex-column flex-lg-row\">\n      <Img className=\"mr-3 img-fluid picture mx-auto\" fluid={props.profile} />\n      <div\n        className=\"media-body p-4 d-flex flex-column flex-lg-row mx-auto mx-lg-0\"\n        style={{ backgroundImage: `url(${Paper})`, color: 'lightgrey' }}\n      >\n        <div className=\"primary-info\">\n          <h1 className=\"name mt-0 mb-1 text-white text-uppercase text-uppercase\">{props.name}</h1>\n          <div className=\"title mb-3\">{props.role}</div>\n          <ul className=\"list-unstyled\">\n            <li className=\"mb-2\">\n              <a href={`mailto:${props.email}`} className=\"link-unstyled\">\n                <i className=\"far fa-envelope fa-fw mr-2\" data-fa-transform=\"grow-3\" />\n                {props.email}\n              </a>\n            </li>\n            <li>\n              <a href={`tel:${props.phone}`} className=\"link-unstyled\">\n                <i className=\"fas fa-mobile-alt fa-fw mr-2\" data-fa-transform=\"grow-6\" />\n                {props.phone}\n              </a>\n            </li>\n          </ul>\n        </div>\n        <SocialMedia {...props.socialMedia} />\n      </div>\n    </div>\n  </header>\n);\n","import * as React from 'react';\n\nexport interface Props {\n  language: string;\n  skill: string;\n}\n\nexport const Language = (props: Props) => (\n  <li className=\"mb-2\">\n    <span className=\"resume-lang-name font-weight-bold\">{props.language}</span>{' '}\n    <small className=\"text-muted font-weight-normal\">{props.skill}</small>\n  </li>\n);\n","import * as React from 'react';\nimport { Language, Props as LanguageProps } from './Language';\n\ninterface Props {\n  languages: LanguageProps[];\n}\n\nexport const LanguageList = (props: Props) => (\n  <ul className=\"list-unstyled resume-lang-list\">\n    {props.languages.map((language: LanguageProps, index: number) => (\n      <Language key={index} {...language} />\n    ))}\n  </ul>\n);\n","import * as React from 'react';\n\nconst Paper = require('../../src/assets/images/backgrounds/paper.png');\n\ninterface Props {\n  title: string;\n  skills: string[];\n}\n\nexport const OtherSkillList = (props: Props) => (\n  <div className=\"resume-skill-item\">\n    <h4 className=\"resume-skills-cat font-weight-bold\">{props.title}</h4>\n    <ul className=\"list-inline\">\n      {props.skills.map((skill: string, index: number) => (\n        <li className=\"list-inline-item\" key={index}>\n          <span className=\"badge\" style={{ backgroundImage: `url(${Paper})`, color: 'white' }}>\n            <a\n              href={`http://google.com/search?q=${skill}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"link-unstyled\"\n            >\n              {skill}\n            </a>\n          </span>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","export const messages: any = {\n  de: {\n    CAREER_SUMMARY: 'Karriere Zusammenfassung',\n    CERTIFICATIONS: 'Zertifizierungen',\n    WORK_XP: 'Arbeitserfahrung',\n    WATERSPORT: 'Wassersport',\n    HOMEAUTOMATION: 'Heim Automation',\n    SKILLS: 'Kentnisse',\n    EDUCATION: 'Ausbildung',\n    LANGUAGES: 'Sprachen',\n    INTEREST: 'Interessen',\n    GERMAN: 'Deutsch',\n    ENGLISH: 'Englisch',\n    NATIVE: 'Muttersprache',\n    FLUENT: 'Fließend',\n    OPENSOURCE: 'Open Source Projekte',\n    SOURCEONGITHUB: 'Quellcode auf Github',\n    ACHIEVEMENTS: 'Ergebnisse',\n    TECHNOLOGY_USED: 'Verwendete Technologie',\n    OTHERS: 'Andere',\n    MORE_PROJECTS: 'Mehr Projekte auf Github'\n  },\n  en: {\n    CAREER_SUMMARY: 'Career Summary',\n    CERTIFICATIONS: 'Certifications',\n    WORK_XP: 'Work Experience',\n    WATERSPORT: 'Watersports',\n    HOMEAUTOMATION: 'Home Automation',\n    SKILLS: 'Skills',\n    EDUCATION: 'Education',\n    LANGUAGES: 'Languages',\n    INTEREST: 'Interest',\n    GERMAN: 'German',\n    ENGLISH: 'English',\n    NATIVE: 'Native',\n    FLUENT: 'Fluent',\n    OPENSOURCE: 'Open Source Projects',\n    SOURCEONGITHUB: 'Sourcecode on Github',\n    ACHIEVEMENTS: 'Achievements',\n    TECHNOLOGY_USED: 'Technology used',\n    OTHERS: 'Others',\n    MORE_PROJECTS: 'More Projects on Github'\n  }\n};\n","import { messages } from './messages';\n\nlet loca = 'en';\n\nexport const initLocale = (lang: string) => {\n  loca = lang;\n};\n\nexport const getTranslatedLabel = (key: string): string => {\n  if (messages[loca] && messages[loca][key]) {\n    return messages[loca][key];\n  }\n  return `key-not-found [${key}]`;\n};\n","import * as React from 'react';\nimport { getTranslatedLabel } from './../translations/provider';\n\ninterface Props {\n  achievements: string[];\n}\n\nexport const AchievementList = (props: Props) => (\n  <div>\n    <h4 className=\"resume-timeline-item-desc-heading font-weight-bold\">{getTranslatedLabel('ACHIEVEMENTS')}</h4>\n    <ul style={{ marginLeft: '17px' }}>\n      {props.achievements.map((task: string, index: number) => (\n        <li key={index}>{task}</li>\n      ))}\n    </ul>\n  </div>\n);\n","import * as React from 'react';\nimport { getTranslatedLabel } from './../translations/provider';\n\nconst Paper = require('../../src/assets/images/backgrounds/paper.png');\n\nexport interface Props {\n  technologies: string[];\n}\n\nexport const TechnologyList = (props: Props) => (\n  <div>\n    <h4 className=\"resume-timeline-item-desc-heading font-weight-bold\">{getTranslatedLabel('TECHNOLOGY_USED')}</h4>\n    <ul className=\"list-inline\">\n      {props.technologies.map((tech: string, index: number) => (\n        <li className=\"list-inline-item\" key={index}>\n          <span\n            className=\"badge badge-primary badge-pill\"\n            style={{ backgroundImage: `url(${Paper})`, fontWeight: 'normal' }}\n          >\n            <a\n              href={`http://google.com/search?q=${tech}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"link-unstyled\"\n            >\n              {tech}\n            </a>\n          </span>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import * as React from 'react';\nimport { AchievementList } from './AchievementList';\nimport { TechnologyList } from './TechnologyList';\n\nconst Paper = require('../../src/assets/images/backgrounds/paper.png');\n\nexport interface Props {\n  title: string;\n  role: string;\n  url: string;\n  company: string;\n  from: string;\n  to: string;\n  location: string;\n  description: string;\n  technologies: string[];\n  achievements: string[];\n}\n\nexport const Project = (props: Props) => (\n  <article className=\"resume-timeline-item position-relative pb-5\">\n    <div className=\"resume-timeline-item-header mb-2\">\n      <div className=\"d-flex flex-column flex-md-row\">\n        <h3 className=\"resume-position-title font-weight-bold mb-1\">{props.title}</h3>\n        <div className=\"resume-company-name ml-auto\">{props.company}</div>\n      </div>\n      {props.role}\n      <a href={props.url} rel=\"external nofollow\" className=\"link-unstyled\" target=\"_blank\">{props.url}</a>\n      <div className=\"resume-position-time\">\n        {props.from} - {props.to}{' '}\n        <span\n          style={{\n            backgroundImage: `url(${Paper})`,\n            color: 'white',\n            padding: '0px 7px',\n            borderRadius: '25px',\n            float: 'right'\n          }}\n        >\n          {props.location}\n        </span>\n      </div>\n    </div>\n    <div className=\"resume-timeline-item-desc\">\n      <p>{props.description}</p>\n      <AchievementList achievements={props.achievements} />\n      <TechnologyList technologies={props.technologies} />\n    </div>\n  </article>\n);\n","import * as React from 'react';\n\nconst Paper = require('../../src/assets/images/backgrounds/paper.png');\n\nexport interface Props {\n  name: string;\n  xpInPercentage: string;\n}\n\nexport const ResumeSkill = (props: Props) => (\n  <li className=\"mb-2\">\n    <div className=\"resume-skill-name\">\n      <a\n        href={`http://google.com/search?q=${props.name}`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"link-unstyled\"\n      >\n        {props.name}\n      </a>\n    </div>\n    <div className=\"progress resume-progress\">\n      <div\n        className=\"progress-bar\"\n        role=\"progressbar\"\n        style={{ width: props.xpInPercentage, backgroundImage: `url(${Paper})` }}\n      />\n    </div>\n  </li>\n);\n","import * as React from 'react';\nimport { Props as Skill, ResumeSkill } from './ResumeSkill';\n\ninterface Props {\n  title: string;\n  skills: Skill[];\n}\n\nexport const ResumeSkillList = (props: Props) => (\n  <div className=\"resume-skill-item\">\n    <h4 className=\"resume-skills-cat font-weight-bold\">{props.title}</h4>\n    <ul className=\"list-unstyled mb-4\">\n      {props.skills.map((skill: Skill, index: number) => (\n        <ResumeSkill key={index} name={skill.name} xpInPercentage={skill.xpInPercentage} />\n      ))}\n    </ul>\n  </div>\n);\n","import * as React from 'react';\nimport './TabSelector.css';\n// tslint:disable: jsx-no-lambda\n\nexport interface Item {\n  name: string;\n  icon: string;\n  checked: boolean;\n}\n\nexport interface Props {\n  items: Item[];\n  onClick: (index: number) => void;\n}\n\nexport const TabSelector = (props: Props) => (\n  <main>\n    {props.items.map((item: Item, index: number) => (\n      <span key={index} onClick={() => props.onClick(index)}>\n        <input type=\"radio\" name=\"tabs\" checked={item.checked} onChange={() => {}} />\n        <label style={{ width: '50%' }}>\n          <i className={`mr-2 ${item.icon}`} /> <span className=\"\td-none d-md-block\">{item.name}</span>\n        </label>\n      </span>\n    ))}\n  </main>\n);\n","// tslint:disable: jsx-no-lambda\nimport { graphql, navigate } from 'gatsby';\nimport * as React from 'react';\nimport { CertificationList } from './../components/CertificationList';\nimport { EducationList } from './../components/EducationList';\nimport { Header } from './../components/Header';\nimport { LanguageList } from './../components/LanguageList';\nimport { OtherSkillList } from './../components/OtherSkillList';\nimport { Project, Props as ProjectProps } from './../components/Project';\nimport { ResumeSkillList } from './../components/ResumeSkillList';\nimport { TabSelector } from './../components/TabSelector';\nimport { getTranslatedLabel, initLocale } from './../translations/provider';\nimport './CV.css';\nconst HtmlToReactParser = require('html-to-react').Parser;\nconst htmlToReactParser = new HtmlToReactParser();\nconst Lines = require('./../assets/images/backgrounds/lines.png');\nconst Paper = require('../../src/assets/images/backgrounds/paper.png');\n\nlet scrollTo = 0;\n\ninterface Props {\n  location: any;\n  data: any;\n  pageContext: any;\n}\n\nconst scrollToY = () => {\n  if (window && scrollTo !== 0) {\n    window.scrollTo(0, scrollTo);\n  }\n};\n\nconst saveScrollPosition = () => {\n  if (document) {\n    scrollTo = document.documentElement.scrollTop;\n  }\n};\n\nexport default (props: Props) => {\n  initLocale(props.pageContext.locale);\n\n  const isWorkSelected = () => {\n    return (\n      (!props.location.pathname.includes('work') && !props.location.pathname.includes('opensource')) ||\n      props.location.pathname.includes('work')\n    );\n  };\n\n  const [selectedItem, setSelectedItem] = React.useState(isWorkSelected() ? 0 : 1);\n  const [items, setItems] = React.useState([\n    {\n      name: getTranslatedLabel('WORK_XP'),\n      path: 'work',\n      checked: isWorkSelected(),\n      icon: 'fas fa-briefcase'\n    },\n    {\n      name: getTranslatedLabel('OPENSOURCE'),\n      path: 'opensource',\n      checked: props.location.pathname.includes('opensource'),\n      icon: 'fab fa-github'\n    }\n  ]);\n\n  React.useEffect(() => {\n    setTimeout(() => scrollToY(), 100);\n  });\n\n  const onLanguageClick = (pathname: string) => {\n    saveScrollPosition();\n    pathname.includes('/de/')\n      ? navigate(`/en/${items[selectedItem].path}`)\n      : navigate(`/de/${items[selectedItem].path}`);\n  };\n\n  return (\n    <div className=\"container\">\n      <article className=\"resume-wrapper text-center position-relative\">\n        <div className=\"resume-wrapper-inner mx-auto text-left bg-white shadow-lg\">\n          <Header\n            profile={props.data.profile.childImageSharp.fluid}\n            role={props.data.social.nodes[0].childSocialJson.role}\n            name={props.data.social.nodes[0].childSocialJson.name}\n            phone={props.data.social.nodes[0].childSocialJson.phone}\n            email={props.data.social.nodes[0].childSocialJson.email}\n            socialMedia={{\n              github: props.data.social.nodes[0].childSocialJson.social.github,\n              linkedin: props.data.social.nodes[0].childSocialJson.social.linkedin,\n              website: props.data.social.nodes[0].childSocialJson.social.website,\n              xing: props.data.social.nodes[0].childSocialJson.social.xing\n            }}\n          />\n          <div className=\"resume-body p-5\" style={{ backgroundImage: `url(${Lines})`, overflow: 'hidden' }}>\n            <div className=\"text-right\">\n              <button\n                type=\"button\"\n                className=\"btn\"\n                onClick={() => onLanguageClick(props.location.pathname)}\n                style={{ cursor: 'pointer', backgroundImage: `url(${Paper})`, color: 'lightgrey' }}\n              >\n                {props.pageContext.locale === 'de' ? 'EN' : 'DE'}\n              </button>\n            </div>\n\n            <section className=\"resume-section summary-section mb-5\">\n              <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">\n                {getTranslatedLabel('CAREER_SUMMARY')}\n              </h2>\n              <div className=\"resume-section-content\">{htmlToReactParser.parse(props.data.summary.html)}</div>\n            </section>\n\n            <div className=\"row\">\n              <div className=\"col-lg-9\">\n                <TabSelector\n                  items={items}\n                  onClick={index => {\n                    saveScrollPosition();\n                    setSelectedItem(index);\n                    navigate(`/${props.pageContext.locale}/${items[index].path}`);\n                  }}\n                />\n                <div className=\"mb-3\" />\n                {items[0].checked && (\n                  <section className=\"resume-section experience-section mb-5\">\n                    <div className=\"resume-section-content\">\n                      <div className=\"resume-timeline position-relative\">\n                        {props.data.projects.nodes[0].childProjectsJson.projects.map(\n                          (project: ProjectProps, index: number) => (\n                            <Project key={index} {...project} />\n                          )\n                        )}\n                      </div>\n                    </div>\n                  </section>\n                )}\n                {items[1].checked && (\n                  <section className=\"resume-section experience-section mb-5\">\n                    <div className=\"resume-section-content\">\n                      <div className=\"resume-timeline position-relative\">\n                        {props.data.opensource.nodes[0].childOpensourceJson.projects.map(\n                          (project: ProjectProps, index: number) => (\n                            <Project key={index} {...project} />\n                          )\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"my-5 text-center\">\n                      <div>{getTranslatedLabel('MORE_PROJECTS')}</div>\n                      <a\n                        href=\"https://github.com/firsttris?tab=repositories\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"link-unstyled\"\n                      >\n                        https://github.com/firsttris?tab=repositories\n                      </a>\n                    </div>\n                  </section>\n                )}\n              </div>\n              <div className=\"col-lg-3\" style={{ marginTop: '40px' }}>\n                <section className=\"resume-section skills-section mb-5\">\n                  <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">\n                    {getTranslatedLabel('SKILLS')}\n                  </h2>\n                  <div className=\"resume-section-content\">\n                    <ResumeSkillList skills={props.data.skills.nodes[0].childSkillsJson.frontend} title={'Frontend'} />\n                    <ResumeSkillList skills={props.data.skills.nodes[0].childSkillsJson.backend} title={'Backend'} />\n                    <OtherSkillList\n                      skills={props.data.skills.nodes[0].childSkillsJson.others}\n                      title={getTranslatedLabel('OTHERS')}\n                    />\n                  </div>\n                </section>\n                <section className=\"resume-section education-section mb-5\">\n                  <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">\n                    {getTranslatedLabel('EDUCATION')}\n                  </h2>\n                  <div className=\"resume-section-content\">\n                    <EducationList educations={props.data.educations.nodes[0].childEducationsJson.educations} />\n                  </div>\n                </section>\n                <section className=\"resume-section reference-section mb-5\">\n                  <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">\n                    {getTranslatedLabel('CERTIFICATIONS')}\n                  </h2>\n                  <div className=\"resume-section-content\">\n                    <CertificationList certifications={props.data.certs.nodes[0].childCertsJson.certs} />\n                  </div>\n                </section>\n                <section className=\"resume-section language-section mb-5\">\n                  <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">\n                    {getTranslatedLabel('LANGUAGES')}\n                  </h2>\n                  <div className=\"resume-section-content\">\n                    <LanguageList\n                      languages={[\n                        {\n                          language: getTranslatedLabel('GERMAN'),\n                          skill: getTranslatedLabel('NATIVE')\n                        },\n                        {\n                          language: getTranslatedLabel('ENGLISH'),\n                          skill: getTranslatedLabel('FLUENT')\n                        }\n                      ]}\n                    />\n                  </div>\n                </section>\n                <section className=\"resume-section interests-section mb-5\">\n                  <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">\n                    {getTranslatedLabel('INTEREST')}\n                  </h2>\n                  <div className=\"resume-section-content\">\n                    <ul className=\"list-unstyled\">\n                      <li className=\"mb-1\">{getTranslatedLabel('WATERSPORT')}</li>\n                      <li className=\"mb-1\">{getTranslatedLabel('HOMEAUTOMATION')}</li>\n                    </ul>\n                  </div>\n                </section>\n              </div>\n            </div>\n          </div>\n        </div>\n      </article>\n      <p style={{ textAlign: 'center' }}>\n        <a\n          href=\"https://github.com/firsttris/gatsby-cv\"\n          className=\"link-unstyled\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {getTranslatedLabel('SOURCEONGITHUB')}\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport const query = graphql`\n  query($locale: String!) {\n    profile: file(relativePath: { eq: \"profil.png\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    summary: markdownRemark(frontmatter: { locale: { eq: $locale }, name: { eq: \"summary\" } }) {\n      html\n      frontmatter {\n        locale\n        name\n      }\n    }\n    certs: allFile(filter: { name: { eq: $locale }, sourceInstanceName: { eq: \"certs\" } }) {\n      nodes {\n        childCertsJson {\n          certs {\n            title\n            description\n          }\n        }\n      }\n    }\n    opensource: allFile(filter: { name: { eq: $locale }, sourceInstanceName: { eq: \"opensource\" } }) {\n      nodes {\n        name\n        childOpensourceJson {\n          id\n          projects {\n            title\n            company\n            description\n            from\n            role\n            url\n            to\n            technologies\n            achievements\n            location\n          }\n        }\n      }\n    }\n    projects: allFile(filter: { name: { eq: $locale }, sourceInstanceName: { eq: \"projects\" } }) {\n      nodes {\n        name\n        childProjectsJson {\n          id\n          projects {\n            title\n            company\n            description\n            from\n            role\n            to\n            technologies\n            achievements\n            location\n          }\n        }\n      }\n    }\n    skills: allFile(filter: { name: { eq: \"skills\" } }) {\n      nodes {\n        name\n        childSkillsJson {\n          frontend {\n            name\n            xpInPercentage\n          }\n          backend {\n            name\n            xpInPercentage\n          }\n          others\n        }\n      }\n    }\n    social: allFile(filter: { name: { eq: \"social\" } }) {\n      nodes {\n        childSocialJson {\n          email\n          name\n          phone\n          role\n          social {\n            github\n            linkedin\n            website\n            xing\n          }\n        }\n      }\n    }\n    educations: allFile(filter: { name: { eq: $locale }, sourceInstanceName: { eq: \"educations\" } }) {\n      nodes {\n        childEducationsJson {\n          id\n          educations {\n            from\n            titel\n            to\n            uni\n          }\n        }\n      }\n    }\n  }\n`;\n","module.exports = __webpack_public_path__ + \"static/paper-8700d9ec59e26ed45f894baa0c0a5084.png\";","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/profil-d3c969fc313df9f481ab7aa429916237.png\";","module.exports = __webpack_public_path__ + \"static/lines-1c2d10c63aca0b8bfd30d30a872a2878.png\";"],"sourceRoot":""}