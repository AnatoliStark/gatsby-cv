{"version":3,"sources":["webpack:///./src/components/Certification.tsx","webpack:///./src/components/CertificationList.tsx","webpack:///./src/components/Education.tsx","webpack:///./src/components/EducationList.tsx","webpack:///./src/components/SocialMedia.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/Language.tsx","webpack:///./src/components/LanguageList.tsx","webpack:///./src/components/OtherSkillList.tsx","webpack:///./src/components/AchievementList.tsx","webpack:///./src/components/TechnologyList.tsx","webpack:///./src/components/Project.tsx","webpack:///./src/components/ResumeSkill.tsx","webpack:///./src/components/ResumeSkillList.tsx","webpack:///./src/components/TabSelector.tsx","webpack:///./src/translations/messages.ts","webpack:///./src/translations/provider.ts","webpack:///./src/templates/CV.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/assets/images/backgrounds/paper.png","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/images/profil.png","webpack:///./src/assets/images/backgrounds/lines.png"],"names":["Certification","props","react","className","data-fa-transform","title","description","CertificationList","certifications","map","certification","index","Certification_Certification","Object","assign","key","Education","titel","uni","from","to","EducationList","educations","education","Education_Education","iconsStyle","backgroundColor","color","borderRadius","padding","SocialMedia","href","linkedin","target","rel","style","github","xing","website","Paper","require","Header","gatsby_image_default","a","fluid","profile","backgroundImage","name","role","email","phone","SocialMedia_SocialMedia","socialMedia","Language","language","skill","LanguageList","languages","Language_Language","OtherSkillList","skills","AchievementList","achievements","task","TechnologyList","technologies","tech","fontWeight","Project","company","url","float","location","AchievementList_AchievementList","TechnologyList_TechnologyList","ResumeSkill","width","xpInPercentage","ResumeSkillList","ResumeSkill_ResumeSkill","TabSelector","items","item","onClick","type","checked","onChange","icon","messages","de","CAREER_SUMMARY","CERTIFICATIONS","WORK_XP","WATERSPORT","HOMEAUTOMATION","SKILLS","EDUCATION","LANGUAGES","INTEREST","GERMAN","ENGLISH","NATIVE","FLUENT","OPENSOURCE","SOURCEONGITHUB","en","loca","getTranslatedLabel","htmlToReactParser","HtmlToReactParser","Parser","Lines","query","__webpack_exports__","lang","pageContext","locale","_React$useState","React","setItems","Header_Header","data","childImageSharp","social","nodes","childSocialJson","pathname","includes","navigate","cursor","parse","summary","html","TabSelector_TabSelector","newItems","concat","i","toString","projects","childProjectsJson","project","Project_Project","opensource","childOpensourceJson","ResumeSkillList_ResumeSkillList","childSkillsJson","frontend","backend","OtherSkillList_OtherSkillList","others","EducationList_EducationList","childEducationsJson","CertificationList_CertificationList","certs","childCertsJson","LanguageList_LanguageList","textAlign","m","module","exports","default","__webpack_require__","p","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","d","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","pageResources","createElement","InternalPageRenderer","json","propTypes","shape"],"mappings":"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","file":"component---src-templates-cv-tsx-9ca23ad1711866e0df59.js","sourcesContent":["import * as React from 'react';\n\nexport interface Props {\n  title: string;\n  description: string;\n}\n\nexport const Certification = (props: Props) => (\n  <li className=\"mb-2 pl-4 position-relative\">\n    <i className=\"resume-award-icon fas fa-trophy position-absolute\" data-fa-transform=\"shrink-2\" />\n    <div className=\"resume-award-name\">{props.title}</div>\n    <div className=\"resume-award-desc\">{props.description}</div>\n  </li>\n);\n","import * as React from 'react';\nimport { Certification, Props as CertificationProps } from './Certification';\n\ninterface Props {\n  certifications: CertificationProps[];\n}\n\nexport const CertificationList = (props: Props) => (\n  <ul className=\"list-unstyled resume-awards-list\">\n    {props.certifications.map((certification: CertificationProps, index: number) => (\n      <Certification key={index} {...certification} />\n    ))}\n  </ul>\n);\n","import * as React from 'react';\n\nexport interface Props {\n  titel: string;\n  uni: string;\n  from: string;\n  to: string;\n}\n\nexport const Education = (props: Props) => (\n  <li className=\"mb-2\">\n    <div className=\"resume-degree font-weight-bold\">{props.titel}</div>\n    <div className=\"resume-degree-org\">{props.uni}</div>\n    <div className=\"resume-degree-time\">\n      {props.from} - {props.to}\n    </div>\n  </li>\n);\n","import * as React from 'react';\nimport { Education, Props as EudcationProps } from './Education';\n\ninterface Props {\n  educations: EudcationProps[];\n}\n\nexport const EducationList = (props: Props) => (\n  <ul className=\"list-unstyled\">\n    {props.educations.map((education: EudcationProps, index: number) => (\n      <Education key={index} {...education} />\n    ))}\n  </ul>\n);\n","import * as React from 'react';\n\nexport interface Props {\n  linkedin: string;\n  github: string;\n  xing: string;\n  website: string;\n}\n\nconst iconsStyle = {\n  backgroundColor: 'white',\n  color: 'black',\n  borderRadius: '0.125rem',\n  padding: '2px'\n};\n\nexport const SocialMedia = (props: Props) => (\n  <div className=\"secondary-info ml-md-auto mt-2\">\n    <ul className=\"resume-social list-unstyled\">\n      <li className=\"mb-3\">\n        <a href={`http://${props.linkedin}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"link-unstyled\">\n          <span className=\"fa-container text-center mr-2\">\n            <i className=\"fab fa-linkedin-in fa-fw\" style={iconsStyle} />\n          </span>\n          {props.linkedin}\n        </a>\n      </li>\n      <li className=\"mb-3\">\n        <a href={`http://${props.github}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"link-unstyled\">\n          <span className=\"fa-container text-center mr-2\">\n            <i className=\"fab fa-github fa-fw\" style={iconsStyle} />\n          </span>\n          {props.github}\n        </a>\n      </li>\n      <li className=\"mb-3\">\n        <a href={`http://${props.xing}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"link-unstyled\">\n          <span className=\"fa-container text-center mr-2\">\n            <i className=\"fab fa-xing fa-fw\" style={iconsStyle} />\n          </span>\n          {props.xing}\n        </a>\n      </li>\n      <li>\n        <a href={`http://${props.website}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"link-unstyled\">\n          <span className=\"fa-container text-center mr-2\">\n            <i className=\"fas fa-globe\" style={iconsStyle} />\n          </span>\n          {props.website}\n        </a>\n      </li>\n    </ul>\n  </div>\n);\n","import Img from 'gatsby-image';\nimport * as React from 'react';\nimport { Props as socialMediaProps, SocialMedia } from './SocialMedia';\nconst profil = require('../../src/assets/images/profil.png');\nconst Paper = require('../../src/assets/images/backgrounds/paper.png');\n\ninterface Props {\n  name: string;\n  role: string;\n  email: string;\n  phone: string;\n  socialMedia: socialMediaProps;\n  profile: any;\n}\n\nexport const Header = (props: Props) => (\n  <header className=\"resume-header pt-4 pt-lg-0\">\n    <div className=\"media flex-column flex-lg-row\">\n      <Img className=\"mr-3 img-fluid picture mx-auto\" fluid={props.profile} />\n      <div\n        className=\"media-body p-4 d-flex flex-column flex-lg-row mx-auto mx-lg-0\"\n        style={{ backgroundImage: `url(${Paper})`, color: 'lightgrey' }}\n      >\n        <div className=\"primary-info\">\n          <h1 className=\"name mt-0 mb-1 text-white text-uppercase text-uppercase\">{props.name}</h1>\n          <div className=\"title mb-3\">{props.role}</div>\n          <ul className=\"list-unstyled\">\n            <li className=\"mb-2\">\n              <a href={`mailto:${props.email}`} className=\"link-unstyled\">\n                <i className=\"far fa-envelope fa-fw mr-2\" data-fa-transform=\"grow-3\" />\n                {props.email}\n              </a>\n            </li>\n            <li>\n              <a href={`tel:${props.phone}`} className=\"link-unstyled\">\n                <i className=\"fas fa-mobile-alt fa-fw mr-2\" data-fa-transform=\"grow-6\" />\n                {props.phone}\n              </a>\n            </li>\n          </ul>\n        </div>\n        <SocialMedia {...props.socialMedia} />\n      </div>\n    </div>\n  </header>\n);\n","import * as React from 'react';\n\nexport interface Props {\n  language: string;\n  skill: string;\n}\n\nexport const Language = (props: Props) => (\n  <li className=\"mb-2\">\n    <span className=\"resume-lang-name font-weight-bold\">{props.language}</span>{' '}\n    <small className=\"text-muted font-weight-normal\">{props.skill}</small>\n  </li>\n);\n","import * as React from 'react';\nimport { Language, Props as LanguageProps } from './Language';\n\ninterface Props {\n  languages: LanguageProps[];\n}\n\nexport const LanguageList = (props: Props) => (\n  <ul className=\"list-unstyled resume-lang-list\">\n    {props.languages.map((language: LanguageProps, index: number) => (\n      <Language key={index} {...language} />\n    ))}\n  </ul>\n);\n","import * as React from 'react';\n\ninterface Props {\n  title: string;\n  skills: string[];\n}\n\nexport const OtherSkillList = (props: Props) => (\n  <div className=\"resume-skill-item\">\n    <h4 className=\"resume-skills-cat font-weight-bold\">{props.title}</h4>\n    <ul className=\"list-inline\">\n      {props.skills.map((skill: string, index: number) => (\n        <li className=\"list-inline-item\" key={index}>\n          <span className=\"badge badge-dark\">{skill}</span>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import * as React from 'react';\n\ninterface Props {\n  achievements: string[];\n}\n\nexport const AchievementList = (props: Props) => (\n  <div>\n    <h4 className=\"resume-timeline-item-desc-heading font-weight-bold\">Achievements:</h4>\n    <ul>\n      {props.achievements.map((task: string, index: number) => (\n        <li key={index}>{task}</li>\n      ))}\n    </ul>\n  </div>\n);\n","import * as React from 'react';\n\nconst Paper = require('../../src/assets/images/backgrounds/paper.png');\n\nexport interface Props {\n  technologies: string[];\n}\n\nexport const TechnologyList = (props: Props) => (\n  <div>\n    <h4 className=\"resume-timeline-item-desc-heading font-weight-bold\">Technologies used:</h4>\n    <ul className=\"list-inline\">\n      {props.technologies.map((tech: string, index: number) => (\n        <li className=\"list-inline-item\" key={index}>\n          <span className=\"badge badge-primary badge-pill\" style={{ backgroundImage: `url(${Paper})`, fontWeight: 'normal' }}>\n            <a\n              href={`http://google.com/search?q=${tech}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"link-unstyled\"\n            >\n              {tech}\n            </a>\n          </span>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import * as React from 'react';\nimport { AchievementList } from './AchievementList';\nimport { TechnologyList } from './TechnologyList';\n\nconst Paper = require('../../src/assets/images/backgrounds/paper.png');\n\nexport interface Props {\n  title: string;\n  role: string;\n  url: string;\n  company: string;\n  from: string;\n  to: string;\n  location: string;\n  description: string;\n  technologies: string[];\n  achievements: string[];\n}\n\nexport const Project = (props: Props) => (\n  <article className=\"resume-timeline-item position-relative pb-5\">\n    <div className=\"resume-timeline-item-header mb-2\">\n      <div className=\"d-flex flex-column flex-md-row\">\n        <h3 className=\"resume-position-title font-weight-bold mb-1\">{props.title}</h3>\n        <div className=\"resume-company-name ml-auto\">{props.company}</div>\n      </div>\n      {props.role}\n      <a href={props.url} rel=\"external nofollow\" className=\"link-unstyled\" target=\"_blank\">{props.url}</a>\n      <div className=\"resume-position-time\">\n        {props.from} - {props.to}{' '}\n        <span\n          style={{\n            backgroundImage: `url(${Paper})`,\n            color: 'white',\n            padding: '0px 7px',\n            borderRadius: '25px',\n            float: 'right'\n          }}\n        >\n          {props.location}\n        </span>\n      </div>\n    </div>\n    <div className=\"resume-timeline-item-desc\">\n      <p>{props.description}</p>\n      <AchievementList achievements={props.achievements} />\n      <TechnologyList technologies={props.technologies} />\n    </div>\n  </article>\n);\n","import * as React from 'react';\n\nconst Paper = require('../../src/assets/images/backgrounds/paper.png');\n\nexport interface Props {\n  name: string;\n  xpInPercentage: string;\n}\n\nexport const ResumeSkill = (props: Props) => (\n  <li className=\"mb-2\">\n    <div className=\"resume-skill-name\">{props.name}</div>\n    <div className=\"progress resume-progress\">\n      <div\n        className=\"progress-bar\"\n        role=\"progressbar\"\n        style={{ width: props.xpInPercentage, backgroundImage: `url(${Paper})` }}\n      />\n    </div>\n  </li>\n);\n","import * as React from 'react';\nimport { Props as Skill, ResumeSkill } from './ResumeSkill';\n\ninterface Props {\n  title: string;\n  skills: Skill[];\n}\n\nexport const ResumeSkillList = (props: Props) => (\n  <div className=\"resume-skill-item\">\n    <h4 className=\"resume-skills-cat font-weight-bold\">{props.title}</h4>\n    <ul className=\"list-unstyled mb-4\">\n      {props.skills.map((skill: Skill, index: number) => (\n        <ResumeSkill key={index} name={skill.name} xpInPercentage={skill.xpInPercentage} />\n      ))}\n    </ul>\n  </div>\n);\n","import * as React from 'react';\nimport './TabSelector.css';\n// tslint:disable: jsx-no-lambda\n\nexport interface Item {\n  name: string;\n  icon: string;\n  checked: boolean;\n}\n\nexport interface Props {\n  items: Item[];\n  onClick: (index: number) => void;\n}\n\nexport const TabSelector = (props: Props) => (\n  <main>\n    {props.items.map((item: Item, index: number) => (\n      <span key={index} onClick={() => props.onClick(index)}>\n        <input type=\"radio\" name=\"tabs\" checked={item.checked} onChange={() => {}} />\n        <label>\n          <i className={`mr-2 ${item.icon}`} /> {item.name}\n        </label>\n      </span>\n    ))}\n  </main>\n);\n","export const messages: any = {\n  de: {\n    CAREER_SUMMARY: 'Karriere Zusammenfassung',\n    CERTIFICATIONS: 'Zertifizierungen',\n    WORK_XP: 'Arbeitserfahrung',\n    WATERSPORT: 'Wassersport',\n    HOMEAUTOMATION: 'Home Automation',\n    SKILLS: 'Kentnisse & Tools',\n    EDUCATION: 'Ausbildung',\n    LANGUAGES: 'Sprachen',\n    INTEREST: 'Interessen',\n    GERMAN: 'Deutsch',\n    ENGLISH: 'Englisch',\n    NATIVE: 'Muttersprache',\n    FLUENT: 'Fließend',\n    OPENSOURCE: 'Open Source Projekte',\n    SOURCEONGITHUB: 'Quellcode auf Github'\n  },\n  en: {\n    CAREER_SUMMARY: 'Career Summary',\n    CERTIFICATIONS: 'Certifications',\n    WORK_XP: 'Work Experience',\n    WATERSPORT: 'Watersports',\n    HOMEAUTOMATION: 'Home Automation',\n    SKILLS: 'Skills & Tools',\n    EDUCATION: 'Education',\n    LANGUAGES: 'Languages',\n    INTEREST: 'Interest',\n    GERMAN: 'German',\n    ENGLISH: 'English',\n    NATIVE: 'Native',\n    FLUENT: 'Fluent',\n    OPENSOURCE: 'Open Source Projects',\n    SOURCEONGITHUB: 'Sourcecode on Github'\n  }\n};\n","import { messages } from './messages';\n\nlet loca = 'en';\n\nexport const initLocale = (lang: string) => {\n  loca = lang;\n};\n\nexport const getTranslatedLabel = (key: string): string => {\n  if (messages[loca] && messages[loca][key]) {\n    return messages[loca][key];\n  }\n  return `key-not-found [${key}]`;\n};\n","// tslint:disable: jsx-no-lambda\nimport { graphql, navigate } from 'gatsby';\nimport * as React from 'react';\nimport { CertificationList } from './../components/CertificationList';\nimport { EducationList } from './../components/EducationList';\nimport { Header } from './../components/Header';\nimport { LanguageList } from './../components/LanguageList';\nimport { OtherSkillList } from './../components/OtherSkillList';\nimport { Project, Props as ProjectProps } from './../components/Project';\nimport { ResumeSkillList } from './../components/ResumeSkillList';\nimport { TabSelector } from './../components/TabSelector';\nimport { getTranslatedLabel, initLocale } from './../translations/provider';\nimport './CV.css';\nconst HtmlToReactParser = require('html-to-react').Parser;\nconst htmlToReactParser = new HtmlToReactParser();\nconst Lines = require('./../assets/images/backgrounds/lines.png');\nconst Paper = require('../../src/assets/images/backgrounds/paper.png');\n\ninterface Props {\n  location: any;\n  data: any;\n  pageContext: any;\n}\n\nconst onLanguageClick = (pathname: string) => {\n  pathname.includes('/de/') ? navigate('/en/') : navigate('/de/');\n};\n\nexport default (props: Props) => {\n  initLocale(props.pageContext.locale);\n  const [items, setItems] = React.useState([\n    { name: getTranslatedLabel('WORK_XP'), checked: true, icon: 'fas fa-briefcase' },\n    { name: getTranslatedLabel('OPENSOURCE'), checked: false, icon: 'fab fa-github' }\n  ]);\n\n  return (\n    <div className=\"container\">\n      <article className=\"resume-wrapper text-center position-relative\">\n        <div className=\"resume-wrapper-inner mx-auto text-left bg-white shadow-lg\">\n          <Header\n            profile={props.data.profile.childImageSharp.fluid}\n            role={props.data.social.nodes[0].childSocialJson.role}\n            name={props.data.social.nodes[0].childSocialJson.name}\n            phone={props.data.social.nodes[0].childSocialJson.phone}\n            email={props.data.social.nodes[0].childSocialJson.email}\n            socialMedia={{\n              github: props.data.social.nodes[0].childSocialJson.social.github,\n              linkedin: props.data.social.nodes[0].childSocialJson.social.linkedin,\n              website: props.data.social.nodes[0].childSocialJson.social.website,\n              xing: props.data.social.nodes[0].childSocialJson.social.xing\n            }}\n          />\n          <div className=\"resume-body p-5\" style={{ backgroundImage: `url(${Lines})` }}>\n            <div className=\"text-right\">\n              <button\n                type=\"button\"\n                className=\"btn\"\n                onClick={() => onLanguageClick(props.location.pathname)}\n                style={{ cursor: 'pointer', backgroundImage: `url(${Paper})`, color: 'lightgrey' }}\n              >\n                {props.pageContext.locale === 'de' ? 'EN' : 'DE'}\n              </button>\n            </div>\n\n            <section className=\"resume-section summary-section mb-5\">\n              <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">\n                {getTranslatedLabel('CAREER_SUMMARY')}\n              </h2>\n              <div className=\"resume-section-content\">\n                <p className=\"mb-0\">{htmlToReactParser.parse(props.data.summary.html)}</p>\n              </div>\n            </section>\n            <div className=\"row mb-3\">\n              <div className=\"col\">\n                <TabSelector\n                  items={items}\n                  onClick={index => {\n                    const newItems = [...items];\n                    for (const i in newItems) {\n                      if (newItems[i]) {\n                        newItems[i].checked = i === index.toString();\n                      }\n                    }\n                    setItems(newItems);\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              {items[0].checked && (\n                <div className=\"col-lg-9\">\n                  <section className=\"resume-section experience-section mb-5\">\n                    <div className=\"resume-section-content\">\n                      <div className=\"resume-timeline position-relative\">\n                        {props.data.projects.nodes[0].childProjectsJson.projects.map(\n                          (project: ProjectProps, index: number) => (\n                            <Project key={index} {...project} />\n                          )\n                        )}\n                      </div>\n                    </div>\n                  </section>\n                </div>\n              )}\n              {items[1].checked && (\n                <div className=\"col-lg-9\">\n                  <section className=\"resume-section experience-section mb-5\">\n                    <div className=\"resume-section-content\">\n                      <div className=\"resume-timeline position-relative\">\n                        {props.data.opensource.nodes[0].childOpensourceJson.projects.map(\n                          (project: ProjectProps, index: number) => (\n                            <Project key={index} {...project} />\n                          )\n                        )}\n                      </div>\n                    </div>\n                  </section>\n                </div>\n              )}\n              <div className=\"col-lg-3\">\n                <section className=\"resume-section skills-section mb-5\">\n                  <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">\n                    {getTranslatedLabel('SKILLS')}\n                  </h2>\n                  <div className=\"resume-section-content\">\n                    <ResumeSkillList skills={props.data.skills.nodes[0].childSkillsJson.frontend} title={'Frontend'} />\n                    <ResumeSkillList skills={props.data.skills.nodes[0].childSkillsJson.backend} title={'Backend'} />\n                    <OtherSkillList skills={props.data.skills.nodes[0].childSkillsJson.others} title={'Others'} />\n                  </div>\n                </section>\n                <section className=\"resume-section education-section mb-5\">\n                  <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">\n                    {getTranslatedLabel('EDUCATION')}\n                  </h2>\n                  <div className=\"resume-section-content\">\n                    <EducationList educations={props.data.educations.nodes[0].childEducationsJson.educations} />\n                  </div>\n                </section>\n                <section className=\"resume-section reference-section mb-5\">\n                  <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">\n                    {getTranslatedLabel('CERTIFICATIONS')}\n                  </h2>\n                  <div className=\"resume-section-content\">\n                    <CertificationList certifications={props.data.certs.nodes[0].childCertsJson.certs} />\n                  </div>\n                </section>\n                <section className=\"resume-section language-section mb-5\">\n                  <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">\n                    {getTranslatedLabel('LANGUAGES')}\n                  </h2>\n                  <div className=\"resume-section-content\">\n                    <LanguageList\n                      languages={[\n                        {\n                          language: getTranslatedLabel('GERMAN'),\n                          skill: getTranslatedLabel('NATIVE')\n                        },\n                        {\n                          language: getTranslatedLabel('ENGLISH'),\n                          skill: getTranslatedLabel('FLUENT')\n                        }\n                      ]}\n                    />\n                  </div>\n                </section>\n                <section className=\"resume-section interests-section mb-5\">\n                  <h2 className=\"resume-section-title text-uppercase font-weight-bold pb-3 mb-3\">\n                    {getTranslatedLabel('INTEREST')}\n                  </h2>\n                  <div className=\"resume-section-content\">\n                    <ul className=\"list-unstyled\">\n                      <li className=\"mb-1\">{getTranslatedLabel('WATERSPORT')}</li>\n                      <li className=\"mb-1\">{getTranslatedLabel('HOMEAUTOMATION')}</li>\n                    </ul>\n                  </div>\n                </section>\n              </div>\n            </div>\n          </div>\n        </div>\n      </article>\n      <p style={{ textAlign: 'center' }}>\n        <a\n          href=\"https://github.com/firsttris/gatsby-cv\"\n          className=\"link-unstyled\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {getTranslatedLabel('SOURCEONGITHUB')}\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport const query = graphql`\n  query($locale: String!) {\n    profile: file(relativePath: { eq: \"profil.png\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    summary: markdownRemark(frontmatter: { locale: { eq: $locale }, name: { eq: \"summary\" } }) {\n      html\n      frontmatter {\n        locale\n        name\n      }\n    }\n    certs: allFile(filter: { name: { eq: $locale }, sourceInstanceName: { eq: \"certs\" } }) {\n      nodes {\n        childCertsJson {\n          certs {\n            title\n            description\n          }\n        }\n      }\n    }\n    opensource: allFile(filter: { name: { eq: $locale }, sourceInstanceName: { eq: \"opensource\" } }) {\n      nodes {\n        name\n        childOpensourceJson {\n          id\n          projects {\n            title\n            company\n            description\n            from\n            role\n            url\n            to\n            technologies\n            achievements\n            location\n          }\n        }\n      }\n    }\n    projects: allFile(filter: { name: { eq: $locale }, sourceInstanceName: { eq: \"projects\" } }) {\n      nodes {\n        name\n        childProjectsJson {\n          id\n          projects {\n            title\n            company\n            description\n            from\n            role\n            to\n            technologies\n            achievements\n            location\n          }\n        }\n      }\n    }\n    skills: allFile(filter: { name: { eq: \"skills\" } }) {\n      nodes {\n        name\n        childSkillsJson {\n          frontend {\n            name\n            xpInPercentage\n          }\n          backend {\n            name\n            xpInPercentage\n          }\n          others\n        }\n      }\n    }\n    social: allFile(filter: { name: { eq: \"social\" } }) {\n      nodes {\n        childSocialJson {\n          email\n          name\n          phone\n          role\n          social {\n            github\n            linkedin\n            website\n            xing\n          }\n        }\n      }\n    }\n    educations: allFile(filter: { name: { eq: $locale }, sourceInstanceName: { eq: \"educations\" } }) {\n      nodes {\n        childEducationsJson {\n          id\n          educations {\n            from\n            titel\n            to\n            uni\n          }\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = __webpack_public_path__ + \"static/paper-8700d9ec59e26ed45f894baa0c0a5084.png\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/profil-d3c969fc313df9f481ab7aa429916237.png\";","module.exports = __webpack_public_path__ + \"static/lines-1c2d10c63aca0b8bfd30d30a872a2878.png\";"],"sourceRoot":""}